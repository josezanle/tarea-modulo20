{"version":3,"sources":["firebase/firebase-config.jsx","hooks/useForm.jsx","types/types.jsx","actions/ui.jsx","helpers/loadNotes.jsx","helpers/fileUpload.jsx","actions/notes.jsx","actions/auth.jsx","components/auth/RegisterScreen.jsx","components/auth/LoginScreen.jsx","routers/AuthRouter.jsx","components/journal/JournalEntry.jsx","components/journal/JournalEntries.jsx","components/journal/Sidebar.jsx","components/journal/NothingSelected.jsx","components/notes/NotesAppBar.jsx","components/notes/NotesScreen.jsx","components/journal/JournalScreen.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.jsx","reducers/uiReducer.jsx","reducers/notesReducer.jsx","store/store.jsx","reducers/authReducer.jsx","JournalApp.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","RegisterScreen","useDispatch","msgError","useSelector","state","ui","password2","formValues","isFormValid","trim","length","validator","isEmail","className","onSubmit","preventDefault","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","placeholder","autoComplete","onChange","to","LoginScreen","loading","disabled","onClick","signInWithPopup","src","alt","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundPosition","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NotesScreen","activeId","useRef","useEffect","current","delete","startDeleting","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.80169c28.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDmMI9hqdy4TSQOdHyH8FJrd9MOq9b1m9g\",\r\n    authDomain: \"sql-demos-3f601.firebaseapp.com\",\r\n    databaseURL: \"https://sql-demos-3f601.firebaseio.com\",\r\n    projectId: \"sql-demos-3f601\",\r\n    storageBucket: \"sql-demos-3f601.appspot.com\",\r\n    messagingSenderId: \"501784188673\",\r\n    appId: \"1:501784188673:web:9bb851e4bdb343ef8c6d00\",\r\n    measurementId: \"G-Q6ENLGVF1J\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// referencia a firestore\r\nconst db = firebase.firestore();\r\n\r\n// con esta referencia podemos hacer la autenticacion con google\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","export const types = {\r\n    login: '[Auth] login',\r\n    logout:'[Auth] logout',\r\n\r\n    uiSetError:'[UI] Set Error',\r\n    uiRemoveError:'[UI] Remove Error',\r\n\r\n    uiStartLoading:'[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew:'[Notes] New Note',\r\n    notesActive: '[Notes] Set Active Note',\r\n    notesLoad: '[Notes] Load Note',\r\n    notesUpdated: '[Notes] Updated Note',\r\n    notesFileUrl: '[Notes] Updated Image Url',\r\n    notesDelete: '[Notes] Delete Note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import { types } from '../types/types';\r\n\r\nexport const setError = (err) =>({\r\n    type: types.uiSetError,\r\n    payload:err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () =>({\r\n    type:types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () =>({\r\n    type:types.uiFinishLoading\r\n})","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async (uid)=>{\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push ({\r\n                id:snapHijo.id,\r\n                ...snapHijo.data()\r\n            })\r\n\r\n    });\r\n\r\n    \r\n\r\n    return notes;\r\n\r\n}","export const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dubv6xkxf/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method:'POST',\r\n            body:formData\r\n        })\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n\r\n\r\n\r\n}","\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport Swal from 'sweetalert2'\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\n\r\nexport const startNewNote = ( ) => {\r\n    return async (dispatch,getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        const newNote = {\r\n            title:'',\r\n            body:'',\r\n            date:new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id , newNote));\r\n}\r\n}\r\n\r\nexport const activeNote = (id,note) => ({\r\n    type:types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n})\r\nexport const addNewNote = (id, note)=> ({\r\n    type:types.notesAddNew,\r\n    payload:{\r\n        id, ...note\r\n    }\r\n\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n\r\n        const  notes = await loadNotes (uid);\r\n        dispatch( setNotes (notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type:types.notesLoad,\r\n    payload:notes\r\n})\r\n\r\nexport const startSaveNote = (note) =>{\r\n    return async(dispatch,getState) =>{\r\n        const {uid} = getState().auth;\r\n\r\n        if (!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id,noteToFirestore))\r\n        Swal.fire('Saved',note.title,'sucess')\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id,note) => ({\r\n    type:types.notesUpdated,\r\n    payload:{\r\n        id,note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport const startUploading = (file)=>{\r\n    return async (dispatch,getState) => {\r\n\r\n        const {active:activeNote} = getState().notes;\r\n        Swal.fire({\r\n            title:'Uploading..',\r\n            text:'Please Wait..',\r\n            allowOutsideClick:false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote ( activeNote))\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch,getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id))\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type:types.notesDelete,\r\n    payload:id\r\n})\r\n\r\nexport const noteLogout =() => ({\r\n    type:types.notesLogoutCleaning\r\n})","import {types} from '../types/types';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nimport { firebase,googleAuthProvider } from '../firebase/firebase-config';\r\nimport { startLoading, finishLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email,password) =>{\r\n    return (dispatch)=> {\r\n\r\n        dispatch(startLoading());\r\n\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n\r\n\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error',e.message, 'error');\r\n            })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email,password,name) => {\r\n    return (dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then(async({ user }) => {\r\n\r\n            await user.updateProfile({displayName:name});\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        })\r\n        .catch (e => {\r\n            Swal.fire('Error', e.message, 'error');\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) =>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then(({user}) =>{\r\n            dispatch(\r\n                login(user.uid,user.displayName)\r\n                )\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const login = (uid,displayName) => ({\r\n\r\n        type: types.login,\r\n        payload:{\r\n                uid,\r\n                displayName\r\n                }\r\n});\r\n\r\nexport const startLogout = () =>{\r\n    return async (dispatch) =>{\r\n        await firebase.auth().signOut();\r\n\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n\r\n    }\r\n \r\n}\r\n\r\nexport const logout = ()=> ({\r\n    type:types.logout\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n\r\nconst [formValues,handleInputChange] = useForm({\r\n\r\n    name:'jozelo',\r\n    email:'example@gmail.com',\r\n    password:'123456',\r\n    password2: '123456'\r\n\r\n})\r\nconst {name,email,password,password2} = formValues;\r\n\r\nconst handleRegister = (e) =>{\r\n    e.preventDefault();\r\n\r\n    if(isFormValid()){\r\n        dispatch(startRegisterWithEmailPasswordName(email,password,name))\r\n    }\r\n}\r\n\r\nconst isFormValid = () =>{\r\n\r\n    if(name.trim().length === 0 ){\r\n        dispatch(setError ('Name Is Requiereded'))\r\n        return false;\r\n\r\n    }else if (!validator.isEmail(email) ){\r\n        dispatch(setError('Email is Not Valid'))\r\n        return false;\r\n\r\n    }else if (password !== password2 || password.length < 5) {\r\n        dispatch(setError('Password should be at least of 6 characters'))\r\n        return false\r\n    }\r\n\r\n\r\n    dispatch (removeError())\r\n    return true;\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                className=\"animate__animated animate__fadeIn\"\r\n                onSubmit={handleRegister}>\r\n\r\n              {\r\n                  msgError &&\r\n                    (    \r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n              }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"  \r\n                    autoComplete=\"off\" \r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                \r\n                    />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                  \r\n                /> \r\n\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n\r\n                /> \r\n\r\n                <button\r\n                        type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >Register\r\n                    \r\n                </button> \r\n\r\n               \r\n\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                Already Registered?\r\n                </Link>    \r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\nconst LoginScreen = () => {\r\n\r\nconst dispatch = useDispatch();\r\nconst {loading} = useSelector(state => state.ui)\r\n\r\nconst [formValues,handleInputChange] = useForm ({\r\n    email:'',\r\n    password:''\r\n});\r\n\r\nconst {email,password} = formValues;\r\n\r\n\r\nconst handleLogin = (e) =>{\r\n    e.preventDefault ();\r\n    dispatch(startLoginEmailPassword(email,password))\r\n}\r\n\r\nconst handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin())\r\n\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form \r\n                className=\"animate__animated animate__fadeIn\"\r\n                onSubmit={handleLogin}>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"  \r\n                    autoComplete=\"off\" \r\n                    value={email}                \r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}                 \r\n                /> \r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >Login\r\n                    \r\n                </button> \r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Networks</p>\r\n                    <div\r\n                        \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                Create New Account    \r\n                </Link>    \r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport RegisterScreen from '../components/auth/RegisterScreen';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthRouter;\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport default function JournalEntry({id,date,title,body,url}) {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch()\r\n\r\nconst handleEntryClick = () =>{\r\n    dispatch(\r\n        activeNote(id,{\r\n            date,\r\n            title,\r\n            body,\r\n            url\r\n        })\r\n    )\r\n}\r\n    return (\r\n\r\n\r\n\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            \r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition:'center',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n        <h4 className=\"journal__entry-title\">{title}</h4>\r\n\r\n        <p className=\"journal__entry-content\">{body}</p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n        <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport JournalEntry from './JournalEntry';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function JournalEntries() {\r\n\r\nconst {notes} = useSelector(state => state.notes)\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={note.id} \r\n                        {...note}\r\n                        />                \r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport JournalEntries from './JournalEntries';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nconst Sidebar = () => {\r\n\r\n\r\nconst dispatch = useDispatch()\r\nconst {name} = useSelector(state => state.auth)\r\n\r\nconst handleLogout = () =>{\r\n\r\n    dispatch (startLogout())\r\n}\r\n    const handleAddNew = () =>{\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>{name}</span>\r\n                </h3>\r\n\r\n                <button\r\n                        className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >Logout</button>\r\n\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            \r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nconst NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>Select Something!</p>\r\n            <i className=\"fas fa-kiss-beam\"></i>        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NothingSelected;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nconst NotesAppBar = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    const handleSave = ()=>{\r\n        dispatch (startSaveNote (active));\r\n    }\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>\r\n                <input \r\n                id='fileSelector'\r\n                type=\"file\"\r\n                name='file'\r\n                style={{display:'none'}}\r\n                onChange={handleFileChange}\r\n                />\r\n            </span>\r\n\r\n            <div>\r\n                <button \r\n                        onClick={handlePictureClick}\r\n                        className=\"btn\">Picture\r\n                </button>\r\n                \r\n                <button \r\n                \r\n                onClick={handleSave}\r\n                className=\"btn\">Save\r\n                </button>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotesAppBar;\r\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting,  } from '../../actions/notes';\nimport NotesAppBar from './NotesAppBar';\n\nexport const NotesScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active:note } = useSelector( state => state.notes );\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { body, title,id } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        \n        if ( note.id !== activeId.current ) {\n            reset( note );\n            activeId.current = note.id\n        }\n\n    }, [note, reset])\n\n    useEffect(() => {\n        \n        dispatch( activeNote( formValues.id, { ...formValues } ) );\n\n    }, [formValues, dispatch])\n\n\n    const handleDelete = () => {\n        dispatch( startDeleting( id ) );\n    }\n\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                />\n\n                {\n                    (note.url) \n                    && (\n                        <div className=\"notes__image\">\n                            <img \n                                src={ note.url }\n                                alt=\"imagen\"\n                            />\n                        </div>\n                    )\n                }\n\n\n            </div>\n\n\n            <button \n                className=\"btn btn-danger btn-block\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport { useSelector } from 'react-redux';\r\nimport NothingSelected from './NothingSelected';\r\nimport { NotesScreen } from '../notes/NotesScreen';\r\n\r\nconst JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeLeft\">\r\n\r\n              <Sidebar/>\r\n\r\n              <main>\r\n                    {\r\n                        (active)\r\n                        ?(<NotesScreen />)\r\n                        :(<NothingSelected />)\r\n                    }\r\n              </main>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default JournalScreen;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n\r\n} from \"react-router-dom\";\r\n\r\nimport {firebase} from '../firebase/firebase-config'\r\n\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport JournalScreen from \"../components/journal/JournalScreen\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\nconst AppRouter = () => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst [checking, setChecking] = useState(true);\r\nconst [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n\r\n\r\nuseEffect(() => {\r\n\r\n    firebase.auth().onAuthStateChanged(async(user)=>{\r\n\r\n        if (user?.uid){\r\n            dispatch(login(user.uid, user.displayName));\r\n            setIsLoggedIn(true);\r\n\r\n            dispatch(startLoadingNotes( user.uid));\r\n        }else{\r\n            setIsLoggedIn(false);\r\n        }\r\n        setChecking(false);\r\n    });\r\n\r\n}, [dispatch, setChecking, setIsLoggedIn])\r\n\r\nif( checking) {\r\n    return(\r\n        <h3>Espere...</h3>\r\n    )\r\n}\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n            \r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\n const initialState = {\r\n     loading:false,\r\n     msgError:null\r\n }\r\n\r\n\r\nexport const uiReducer = (state= initialState , action)=> {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                    ...state,\r\n                    msgError:action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            } \r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }    \r\n            \r\n\r\n\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes:[],\r\n    active:null\r\n}\r\n\r\n\r\nexport const notesReducer = (state = initialState ,action) => {\r\n\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes:[action.payload,...state.notes]\r\n            }    \r\n        \r\n        case types.notesLoad :\r\n            return {\r\n                    ...state,\r\n                    notes: [...action.payload]\r\n            }    \r\n       \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes:state.notes.map(\r\n                    note=>note.id === action.payload.id\r\n                    ? action.payload.note\r\n                    : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active:null,\r\n                notes:state.notes.filter(note => note.id !== action.payload)\r\n\r\n            }\r\n            \r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active:null,\r\n                notes:[]\r\n            }    \r\n      default:\r\n        return state;\r\n    }\r\n}","import {createStore , combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport {authReducer} from '../reducers/authReducer'\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers ({\r\n\r\nauth: authReducer,\r\nui: uiReducer,\r\nnotes: notesReducer\r\n\r\n})\r\n\r\n\r\nexport const store = createStore (reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state={},action) =>{\r\n\r\nswitch (action.type) {\r\n    \r\n    case types.login:\r\n        \r\n        return{\r\n          uid:action.payload.uid,\r\n          name:action.payload.displayName\r\n      }\r\n\r\n    case types.logout:\r\n        return { }\r\n\r\n    default:\r\n        return state;\r\n}\r\n\r\n}","import React from 'react';\r\n\r\nimport AppRouter from './routers/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\n\r\nconst JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider> \r\n       \r\n    );\r\n}\r\n\r\nexport default JournalApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}